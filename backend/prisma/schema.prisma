// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  user_id                   Int          @id @default(autoincrement())
  email                     String       @unique
  phone_number              String?      @unique
  name                      String
  password                  String?
  auth_provider             AuthProvider @default(CREDENTIALS)
  balance                   Int          @default(0)
  isVerified                Boolean      @default(false)
  created_at                DateTime     @default(now())
  updated_at                DateTime     @updatedAt
  verificationToken         Int?
  resetPasswordToken        String?
  verificationTokenExpired  DateTime?
  resetPasswordTokenExpired DateTime?

  wishlist Wishlist[] @relation("UserWishlist")
}

model Category {
  category_id   Int    @id @default(autoincrement())
  category_name String

  product Product[] @relation("CategoryProduct")
}

model Product {
  product_id           Int      @id @default(autoincrement())
  product_name         String
  product_image        String[]
  code                 String
  price                Int
  storage              String
  color                String
  regional_code        String
  active_warranty      String
  status               Boolean
  condition            String[]
  condition_percentage Int
  completness          String[]
  created_at           DateTime @default(now())
  updated_at           DateTime @updatedAt

  category    Category @relation("CategoryProduct", fields: [category_id], references: [category_id])
  category_id Int

  wishlist Wishlist[] @relation("ProductWishlist")
}

model Wishlist {
  wishlist_id Int      @id @default(autoincrement())
  user        User     @relation("UserWishlist", fields: [user_id], references: [user_id])
  user_id     Int
  product     Product  @relation("ProductWishlist", fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: Cascade)
  product_id  Int
  added_at    DateTime @default(now())
}

enum AuthProvider {
  CREDENTIALS
  GOOGLE
}
